# Use the Jetson L4T base image compatible with Ubuntu 20.04
FROM ubuntu:20.04

# Set the environment variables for non-interactive installations
ENV DEBIAN_FRONTEND=noninteractive
ENV ROS_DISTRO=galactic
ENV USERNAME=myuser

# Install basic utilities, build tools, ROS 2, rosdep, and other necessary packages
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        wget \
        gnupg2 \
        lsb-release \
        curl \
        sudo \
        python3-pip \
        build-essential \
        libpcap-dev && \
    wget https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -O - | apt-key add - && \
    echo "deb [arch=amd64] http://packages.ros.org/ros2/ubuntu focal main" | tee /etc/apt/sources.list.d/ros2.list && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        ros-$ROS_DISTRO-desktop \
        python3-rosdep && \
    rm -rf /var/lib/apt/lists/*

# Initialize rosdep
RUN rosdep init && \
    rosdep update

# Install colcon and its extensions via pip
RUN pip3 install -U \
    colcon-common-extensions \
    colcon-ros-bundle

# Create a new user
RUN useradd -m -s /bin/bash $USERNAME && \
    echo "$USERNAME ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

# Add user to dialout group
RUN usermod -aG dialout $USERNAME

# Set the default user
USER $USERNAME

# Source the ROS 2 setup script by default
RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> /home/$USERNAME/.bashrc

# Set the entrypoint to automatically source ROS 2 and the workspace environment
ENTRYPOINT ["/bin/bash", "-c", "source /opt/ros/$ROS_DISTRO/setup.bash && exec bash"]

# Dockerfile for ROS 2 base image setup
