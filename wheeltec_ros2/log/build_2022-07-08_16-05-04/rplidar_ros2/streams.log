[0.061s] Invoking command in '/home/wheeltec/wheeltec_ros2/build/rplidar_ros2': CMAKE_PREFIX_PATH=/opt/ros/galactic /usr/bin/cmake /home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2 -DCMAKE_INSTALL_PREFIX=/home/wheeltec/wheeltec_ros2/install/rplidar_ros2
[0.278s] -- The C compiler identification is GNU 9.4.0
[0.485s] -- The CXX compiler identification is GNU 9.4.0
[0.501s] -- Check for working C compiler: /usr/bin/cc
[0.754s] -- Check for working C compiler: /usr/bin/cc -- works
[0.757s] -- Detecting C compiler ABI info
[1.009s] -- Detecting C compiler ABI info - done
[1.057s] -- Detecting C compile features
[1.059s] -- Detecting C compile features - done
[1.070s] -- Check for working CXX compiler: /usr/bin/c++
[1.346s] -- Check for working CXX compiler: /usr/bin/c++ -- works
[1.351s] -- Detecting CXX compiler ABI info
[1.652s] -- Detecting CXX compiler ABI info - done
[1.701s] -- Detecting CXX compile features
[1.704s] -- Detecting CXX compile features - done
[1.718s] -- Found ament_cmake: 1.1.5 (/opt/ros/galactic/share/ament_cmake/cmake)
[1.831s] -- Found PythonInterp: /usr/bin/python3 (found suitable version "3.8.10", minimum required is "3") 
[1.832s] -- Using PYTHON_EXECUTABLE: /usr/bin/python3
[2.219s] -- Found rclcpp: 9.2.1 (/opt/ros/galactic/share/rclcpp/cmake)
[2.472s] -- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
[2.511s] -- Found rosidl_adapter: 2.2.2 (/opt/ros/galactic/share/rosidl_adapter/cmake)
[2.880s] -- Found OpenSSL: /usr/lib/aarch64-linux-gnu/libcrypto.so (found version "1.1.1f")  
[2.994s] -- Found FastRTPS: /opt/ros/galactic/include  
[3.359s] -- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
[3.669s] -- Found rmw_implementation_cmake: 3.3.1 (/opt/ros/galactic/share/rmw_implementation_cmake/cmake)
[3.684s] -- Found rmw_cyclonedds_cpp: 0.22.5 (/opt/ros/galactic/share/rmw_cyclonedds_cpp/cmake)
[3.776s] -- Using RMW implementation 'rmw_cyclonedds_cpp' as default
[3.781s] -- Looking for pthread.h
[4.047s] -- Looking for pthread.h - found
[4.049s] -- Performing Test CMAKE_HAVE_LIBC_PTHREAD
[4.313s] -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed
[4.314s] -- Looking for pthread_create in pthreads
[4.536s] -- Looking for pthread_create in pthreads - not found
[4.537s] -- Looking for pthread_create in pthread
[4.809s] -- Looking for pthread_create in pthread - found
[4.814s] -- Found Threads: TRUE  
[5.502s] -- Found sensor_msgs: 2.2.4 (/opt/ros/galactic/share/sensor_msgs/cmake)
[6.032s] -- Found std_srvs: 2.2.4 (/opt/ros/galactic/share/std_srvs/cmake)
[6.373s] -- Configuring done
[6.422s] -- Generating done
[6.429s] -- Build files have been written to: /home/wheeltec/wheeltec_ros2/build/rplidar_ros2
[6.473s] Invoked command in '/home/wheeltec/wheeltec_ros2/build/rplidar_ros2' returned '0': CMAKE_PREFIX_PATH=/opt/ros/galactic /usr/bin/cmake /home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2 -DCMAKE_INSTALL_PREFIX=/home/wheeltec/wheeltec_ros2/install/rplidar_ros2
[6.476s] Invoking command in '/home/wheeltec/wheeltec_ros2/build/rplidar_ros2': CMAKE_PREFIX_PATH=/opt/ros/galactic /usr/bin/cmake --build /home/wheeltec/wheeltec_ros2/build/rplidar_ros2 -- -j4 -l4
[6.659s] [35m[1mScanning dependencies of target rplidar_scan_publisher[0m
[6.898s] [  8%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/src/rplidar_scan_publisher.cpp.o[0m
[16.096s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:36[m[K,
[16.096s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
[16.097s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar.h:36[m[K,
[16.097s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:38[m[K:
[16.098s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[16.098s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[16.099s]       |                [01;35m[K^[m[K
[16.100s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
[16.100s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar.h:36[m[K,
[16.101s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:38[m[K:
[16.101s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[16.101s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[16.102s]       |                    [01;35m[K^[m[K
[16.161s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:[m[K In member function â€˜[01m[Kvoid RPLidarScanPublisher::init_param()[m[Kâ€™:
[16.162s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:67:47:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[16.163s]    67 |         this->declare_parameter("channel_type"[01;35m[K)[m[K;
[16.164s]       |                                               [01;35m[K^[m[K
[16.164s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[16.168s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[16.168s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[16.169s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[16.169s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[16.170s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[16.170s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[16.170s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:68:41:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[16.171s]    68 |         this->declare_parameter("tcp_ip"[01;35m[K)[m[K;
[16.171s]       |                                         [01;35m[K^[m[K
[16.171s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[16.172s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[16.172s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[16.173s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[16.173s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[16.174s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[16.174s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[16.175s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:69:41:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[16.180s]    69 |         this->declare_parameter("udp_ip"[01;35m[K)[m[K;
[16.181s]       |                                         [01;35m[K^[m[K
[16.181s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[16.182s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[16.182s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[16.182s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[16.183s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[16.184s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[16.184s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[16.185s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:70:43:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[16.185s]    70 |         this->declare_parameter("tcp_port"[01;35m[K)[m[K;
[16.185s]       |                                           [01;35m[K^[m[K
[16.186s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[16.186s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[16.187s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[16.187s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[16.187s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[16.196s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[16.197s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[16.198s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:71:43:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[16.198s]    71 |         this->declare_parameter("udp_port"[01;35m[K)[m[K;
[16.199s]       |                                           [01;35m[K^[m[K
[16.199s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[16.200s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[16.200s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[16.200s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[16.201s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[16.201s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[16.202s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[16.202s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:72:46:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[16.203s]    72 |         this->declare_parameter("serial_port"[01;35m[K)[m[K;
[16.203s]       |                                              [01;35m[K^[m[K
[16.203s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[16.204s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[16.204s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[16.205s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[16.205s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[16.206s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[16.206s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[16.206s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:73:50:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[16.207s]    73 |         this->declare_parameter("serial_baudrate"[01;35m[K)[m[K;
[16.207s]       |                                                  [01;35m[K^[m[K
[16.208s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[16.214s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[16.214s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[16.215s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[16.215s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[16.216s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[16.216s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[16.217s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:74:43:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[16.217s]    74 |         this->declare_parameter("frame_id"[01;35m[K)[m[K;
[16.218s]       |                                           [01;35m[K^[m[K
[16.218s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[16.218s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[16.219s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[16.219s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[16.220s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[16.220s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[16.221s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[16.221s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:75:43:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[16.221s]    75 |         this->declare_parameter("inverted"[01;35m[K)[m[K;
[16.222s]       |                                           [01;35m[K^[m[K
[16.222s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[16.223s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[16.223s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[16.223s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[16.224s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[16.224s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[16.225s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[16.225s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:76:51:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[16.226s]    76 |         this->declare_parameter("angle_compensate"[01;35m[K)[m[K;
[16.226s]       |                                                   [01;35m[K^[m[K
[16.227s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[16.227s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[16.228s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[16.228s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[16.229s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[16.229s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[16.230s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[16.230s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:77:44:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[16.231s]    77 |         this->declare_parameter("scan_mode"[01;35m[K)[m[K;
[16.231s]       |                                            [01;35m[K^[m[K
[16.231s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[16.232s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[16.232s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[16.233s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[16.233s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[16.234s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[16.234s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[16.234s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:78:49:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
[16.235s]    78 |         this->declare_parameter("scan_frequency"[01;35m[K)[m[K;
[16.235s]       |                                                 [01;35m[K^[m[K
[16.236s] In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[16.236s]                  from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
[16.237s]                  from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
[16.237s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[16.237s] [01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
[16.238s]   422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
[16.238s]       |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[20.415s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:[m[K In member function â€˜[01m[Kbool RPLidarScanPublisher::checkRPLIDARHealth(sl::ILidarDriver*)[m[Kâ€™:
[20.416s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:150:5:[m[K [01;35m[Kwarning: [m[Kcontrol reaches end of non-void function [[01;35m[K-Wreturn-type[m[K]
[20.417s]   150 |     [01;35m[K}[m[K
[20.417s]       |     [01;35m[K^[m[K
[36.229s] [ 16%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/arch/linux/timer.cpp.o[0m
[38.015s] [ 25%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/hal/thread.cpp.o[0m
[39.514s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_protocol.h:36[m[K,
[39.515s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:39[m[K,
[39.516s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/sdkcommon.h:49[m[K,
[39.517s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/hal/thread.cpp:35[m[K:
[39.517s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[39.518s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[39.518s]       |                [01;35m[K^[m[K
[39.521s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_cmd.h:36[m[K,
[39.523s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:40[m[K,
[39.524s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/sdkcommon.h:49[m[K,
[39.525s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/hal/thread.cpp:35[m[K:
[39.525s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[39.526s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[39.526s]       |                    [01;35m[K^[m[K
[39.761s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/hal/thread.cpp:43[m[K:
[39.762s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/arch/linux/thread.hpp:[m[K In static member function â€˜[01m[Kstatic rp::hal::Thread rp::hal::Thread::create(thread_proc_t, void*)[m[Kâ€™:
[39.763s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/arch/linux/thread.hpp:48:77:[m[K [01;35m[Kwarning: [m[Kcast between incompatible function types from â€˜[01m[Kthread_proc_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int (*)(void*)[m[Kâ€™} to â€˜[01m[Kvoid* (*)(void*)[m[Kâ€™ [[01;35m[K-Wcast-function-type[m[K]
[39.763s]    48 |     pthread_create((pthread_t *)&newborn._handle, NULL, (void * (*)(void *))[01;35m[Kproc[m[K, data);
[39.764s]       |                                                                             [01;35m[K^~~~[m[K
[39.767s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/arch/linux/thread.hpp:[m[K In member function â€˜[01m[Ku_result rp::hal::Thread::join(long unsigned int)[m[Kâ€™:
[39.768s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/arch/linux/thread.hpp:129:37:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[39.769s]   129 | u_result Thread::join([01;35m[Kunsigned long timeout[m[K)
[39.770s]       |                       [01;35m[K~~~~~~~~~~~~~~^~~~~~~[m[K
[40.322s] [ 33%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/rplidar_driver.cpp.o[0m
[41.899s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_protocol.h:36[m[K,
[41.900s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:39[m[K,
[41.900s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sdkcommon.h:49[m[K,
[41.900s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:33[m[K:
[41.901s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[41.902s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[41.902s]       |                [01;35m[K^[m[K
[41.902s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_cmd.h:36[m[K,
[41.903s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:40[m[K,
[41.903s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sdkcommon.h:49[m[K,
[41.903s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:33[m[K:
[41.904s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[41.904s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[41.905s]       |                    [01;35m[K^[m[K
[42.611s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:[m[K In member function â€˜[01m[Ku_result rp::standalone::rplidar::RPlidarDriver::connect(const char*, _u32, _u32)[m[Kâ€™:
[42.612s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:67:77:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kflag[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[42.612s]    67 |     u_result RPlidarDriver::connect(const char *path, _u32 portOrBaud, [01;35m[K_u32 flag[m[K)
[42.612s]       |                                                                        [01;35m[K~~~~~^~~~[m[K
[42.613s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:[m[K In member function â€˜[01m[Ku_result rp::standalone::rplidar::RPlidarDriver::reset(_u32)[m[Kâ€™:
[42.614s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:101:40:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[42.614s]   101 |     u_result RPlidarDriver::reset([01;35m[K_u32 timeout[m[K)
[42.614s]       |                                   [01;35m[K~~~~~^~~~~~~[m[K
[42.615s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:[m[K In member function â€˜[01m[Ku_result rp::standalone::rplidar::RPlidarDriver::getScanDataWithInterval(rplidar_response_measurement_node_t*, size_t&)[m[Kâ€™:
[42.616s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:175:91:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Knodebuffer[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[42.616s]   175 |     u_result RPlidarDriver::getScanDataWithInterval([01;35m[Krplidar_response_measurement_node_t * nodebuffer[m[K, size_t & count)
[42.617s]       |                                                     [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[42.617s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:175:112:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kcount[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[42.618s]   175 | river::getScanDataWithInterval(rplidar_response_measurement_node_t * nodebuffer, [01;35m[Ksize_t & count[m[K)
[42.618s]       |                                                                                  [01;35m[K~~~~~~~~~^~~~~[m[K
[42.618s] 
[43.323s] [ 41%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/sl_crc.cpp.o[0m
[43.410s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:36[m[K,
[43.410s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_crc.h:36[m[K,
[43.410s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_crc.cpp:33[m[K:
[43.411s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[43.411s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[43.416s]       |                [01;35m[K^[m[K
[43.417s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_crc.h:36[m[K,
[43.417s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_crc.cpp:33[m[K:
[43.418s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[43.418s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[43.419s]       |                    [01;35m[K^[m[K
[43.419s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_crc.cpp:[m[K In function â€˜[01m[Ksl_u32 sl::crc32::cal(sl_u32, void*, sl_u16)[m[Kâ€™:
[43.419s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_crc.cpp:77:29:[m[K [01;35m[Kwarning: [m[Ksuggest parentheses around â€˜[01m[K-[m[Kâ€™ in operand of â€˜[01m[K&[m[Kâ€™ [[01;35m[K-Wparentheses[m[K]
[43.420s]    77 |         sl_u8 leftBytes = [01;35m[K4 - len[m[K & 0x3;
[43.420s]       |                           [01;35m[K~~^~~~~[m[K
[43.616s] [ 50%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/sl_lidar_driver.cpp.o[0m
[45.229s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_protocol.h:36[m[K,
[45.230s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:39[m[K,
[45.230s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sdkcommon.h:49[m[K,
[45.231s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:33[m[K:
[45.231s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[45.232s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[45.232s]       |                [01;35m[K^[m[K
[45.233s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_cmd.h:36[m[K,
[45.233s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:40[m[K,
[45.234s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sdkcommon.h:49[m[K,
[45.234s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:33[m[K:
[45.234s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[45.235s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[45.235s]       |                    [01;35m[K^[m[K
[45.974s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::reset(sl_u32)[m[Kâ€™:
[45.975s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:273:32:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[KtimeoutInMs[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[45.975s]   273 |         sl_result reset([01;35m[Ksl_u32 timeoutInMs = DEFAULT_TIMEOUT[m[K)
[45.976s]       |                         [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[45.986s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::getAllSupportedScanModes(std::vector<sl::LidarScanMode>&, sl_u32)[m[Kâ€™:
[45.987s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:286:89:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[KtimeoutInMs[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[45.987s]   286 |         sl_result getAllSupportedScanModes(std::vector<LidarScanMode>& outModes, [01;35m[Ksl_u32 timeoutInMs = DEFAULT_TIMEOUT[m[K)
[45.987s]       |                                                                                  [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[45.990s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::startScan(bool, bool, sl_u32, sl::LidarScanMode*)[m[Kâ€™:
[45.991s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:347:69:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Koptions[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[45.991s]   347 |         sl_result startScan(bool force, bool useTypicalScan, [01;35m[Ksl_u32 options = 0[m[K, LidarScanMode* outUsedScanMode = nullptr)
[45.992s]       |                                                              [01;35m[K~~~~~~~^~~~~~~~~~~[m[K
[46.001s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::stop(sl_u32)[m[Kâ€™:
[46.002s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:534:31:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[46.002s]   534 |         sl_result stop([01;35m[Ksl_u32 timeout = DEFAULT_TIMEOUT[m[K)
[46.002s]       |                        [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[46.003s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::getDeviceInfo(sl_lidar_response_device_info_t&, sl_u32)[m[Kâ€™:
[46.004s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:579:79:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[46.004s]   579 |         sl_result getDeviceInfo(sl_lidar_response_device_info_t& info, [01;35m[Ksl_u32 timeout = DEFAULT_TIMEOUT[m[K)
[46.005s]       |                                                                        [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[46.006s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::checkMotorCtrlSupport(sl::MotorCtrlSupport&, sl_u32)[m[Kâ€™:
[46.006s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:592:76:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[46.007s]   592 |         sl_result checkMotorCtrlSupport(MotorCtrlSupport & support, [01;35m[Ksl_u32 timeout = DEFAULT_TIMEOUT[m[K)
[46.007s]       |                                                                     [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[46.008s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::getFrequency(const sl::LidarScanMode&, const sl_lidar_response_measurement_node_hq_t*, size_t, float&)[m[Kâ€™:
[46.008s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:627:110:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Knodes[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[46.009s]   627 | etFrequency(const LidarScanMode& scanMode, [01;35m[Kconst sl_lidar_response_measurement_node_hq_t* nodes[m[K, size_t count, float& frequency)
[46.009s]       |                                            [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[46.010s] 
[46.010s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::getHealth(sl_lidar_response_device_health_t&, sl_u32)[m[Kâ€™:
[46.011s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:640:79:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[46.011s]   640 |         sl_result getHealth(sl_lidar_response_device_health_t& health, [01;35m[Ksl_u32 timeout = DEFAULT_TIMEOUT[m[K)
[46.011s]       |                                                                        [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[46.014s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::getMotorInfo(sl::LidarMotorInfo&, sl_u32)[m[Kâ€™:
[46.014s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:730:66:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[KtimeoutInMs[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[46.015s]   730 |         sl_result getMotorInfo(LidarMotorInfo &motorInfo, [01;35m[Ksl_u32 timeoutInMs[m[K)
[46.015s]       |                                                           [01;35m[K~~~~~~~^~~~~~~~~~~[m[K
[46.034s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Ksl_result sl::SlamtecLidarDriver::_sendCommand(sl_u16, const void*, size_t)[m[Kâ€™:
[46.035s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:1089:35:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<unsigned char>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
[46.035s]  1089 |             for (int pos = 0; [01;35m[Kpos < cmd_packet.size()[m[K; pos++) {
[46.035s]       |                               [01;35m[K~~~~^~~~~~~~~~~~~~~~~~~[m[K
[46.036s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:1058:19:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kpkt_header[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
[46.037s]  1058 |             sl_u8 [01;35m[Kpkt_header[m[K[10];
[46.037s]       |                   [01;35m[K^~~~~~~~~~[m[K
[46.047s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvoid sl::SlamtecLidarDriver::_ultraCapsuleToNormal(const sl_lidar_response_ultra_capsule_measurement_nodes_t&, sl_lidar_response_measurement_node_hq_t*, size_t&)[m[Kâ€™:
[46.047s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:1370:40:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kunsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
[46.048s]  1370 |                     if (([01;35m[Kdist_predict1 == 0xFFFFFE00[m[K) || (dist_predict1 == 0x1FF)) {
[46.048s]       |                          [01;35m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~[m[K
[46.049s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:1379:40:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kunsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
[46.049s]  1379 |                     if (([01;35m[Kdist_predict2 == 0xFFFFFE00[m[K) || (dist_predict2 == 0x1FF)) {
[46.050s]       |                          [01;35m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~[m[K
[46.058s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvoid sl::SlamtecLidarDriver::_dense_capsuleToNormal(const sl_lidar_response_capsule_measurement_nodes_t&, sl_lidar_response_measurement_node_hq_t*, size_t&)[m[Kâ€™:
[46.059s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:1577:116:[m[K [01;35m[Kwarning: [m[Ktype qualifiers ignored on cast result type [[01;35m[K-Wignored-qualifiers[m[K]
[46.059s]  1577 |  int dist = static_cast<const int>(_cached_previous_dense_capsuledata.cabins[pos].distance[01;35m[K)[m[K;
[46.060s]       |                                                                                           [01;35m[K^[m[K
[46.060s] 
[46.574s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K At global scope:
[46.574s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:72:17:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid sl::convert(const sl_lidar_response_measurement_node_hq_t&, sl_lidar_response_measurement_node_t&)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
[46.575s]    72 |     static void [01;35m[Kconvert[m[K(const sl_lidar_response_measurement_node_hq_t& from, sl_lidar_response_measurement_node_t& to)
[46.575s]       |                 [01;35m[K^~~~~~~[m[K
[46.576s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:59:17:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid sl::printDeprecationWarn(const char*, const char*)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
[46.576s]    59 |     static void [01;35m[KprintDeprecationWarn[m[K(const char* fn, const char* replacement)
[46.577s]       |                 [01;35m[K^~~~~~~~~~~~~~~~~~~~[m[K
[57.227s] [ 58%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/sl_serial_channel.cpp.o[0m
[57.261s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_serial_channel.cpp:33:9:[m[K [01;35m[Kwarning: [m[K#pragma once in main file
[57.261s]    33 | #pragma [01;35m[Konce[m[K
[57.262s]       |         [01;35m[K^~~~[m[K
[58.351s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:36[m[K,
[58.352s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
[58.352s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_serial_channel.cpp:34[m[K:
[58.353s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[58.354s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[58.355s]       |                [01;35m[K^[m[K
[58.358s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
[58.358s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_serial_channel.cpp:34[m[K:
[58.359s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[58.360s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[58.361s]       |                    [01;35m[K^[m[K
[58.724s] [ 66%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/sl_tcp_channel.cpp.o[0m
[58.757s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_tcp_channel.cpp:33:9:[m[K [01;35m[Kwarning: [m[K#pragma once in main file
[58.758s]    33 | #pragma [01;35m[Konce[m[K
[58.759s]       |         [01;35m[K^~~~[m[K
[59.896s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:36[m[K,
[59.896s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
[59.897s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_tcp_channel.cpp:34[m[K:
[59.897s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[59.898s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[59.898s]       |                [01;35m[K^[m[K
[59.902s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
[59.902s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_tcp_channel.cpp:34[m[K:
[59.903s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[59.904s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[59.904s]       |                    [01;35m[K^[m[K
[59.928s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_tcp_channel.cpp:[m[K In member function â€˜[01m[Kvoid sl::TcpChannel::setStatus(_u32)[m[Kâ€™:
[59.929s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_tcp_channel.cpp:95:29:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kflag[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[59.929s]    95 |         void setStatus([01;35m[K_u32 flag[m[K){}
[59.930s]       |                        [01;35m[K~~~~~^~~~[m[K
[60.279s] [ 75%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/sl_udp_channel.cpp.o[0m
[60.312s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_udp_channel.cpp:33:9:[m[K [01;35m[Kwarning: [m[K#pragma once in main file
[60.313s]    33 | #pragma [01;35m[Konce[m[K
[60.313s]       |         [01;35m[K^~~~[m[K
[61.404s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:36[m[K,
[61.405s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
[61.406s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_udp_channel.cpp:34[m[K:
[61.406s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[61.407s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[61.408s]       |                [01;35m[K^[m[K
[61.411s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
[61.411s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_udp_channel.cpp:34[m[K:
[61.412s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[61.413s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[61.413s]       |                    [01;35m[K^[m[K
[61.434s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_udp_channel.cpp:[m[K In member function â€˜[01m[Kvoid sl::UdpChannel::setStatus(_u32)[m[Kâ€™:
[61.434s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_udp_channel.cpp:103:29:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kflag[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[61.435s]   103 |         void setStatus([01;35m[K_u32 flag[m[K){}
[61.436s]       |                        [01;35m[K~~~~~^~~~[m[K
[61.775s] [ 83%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/arch/linux/net_socket.cpp.o[0m
[63.301s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_protocol.h:36[m[K,
[63.302s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:39[m[K,
[63.302s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/sdkcommon.h:49[m[K,
[63.303s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:10[m[K:
[63.303s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[63.304s]    58 |     sl_u8 data[[01;35m[K0[m[K];
[63.304s]       |                [01;35m[K^[m[K
[63.308s] In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_cmd.h:36[m[K,
[63.309s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:40[m[K,
[63.309s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/sdkcommon.h:49[m[K,
[63.310s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:10[m[K:
[63.310s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
[63.311s]   295 |     sl_u8  payload[[01;35m[K0[m[K];
[63.311s]       |                    [01;35m[K^[m[K
[63.601s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:[m[K In member function â€˜[01m[Kvirtual u_result rp::net::SocketAddress::getAddressAsString(char*, size_t) const[m[Kâ€™:
[63.601s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:170:17:[m[K [01;35m[Kwarning: [m[Kordered comparison of pointer with integer zero [[01;35m[K-Wextra[m[K]
[63.602s]   170 |     return ans<=[01;35m[K0[m[K?RESULT_OPERATION_FAIL:RESULT_OK;
[63.602s]       |                 [01;35m[K^[m[K
[63.624s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:[m[K In member function â€˜[01m[Kvirtual u_result rp::arch::net::StreamSocketImpl::send(const void*, size_t)[m[Kâ€™:
[63.625s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:438:17:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
[63.625s]   438 |         if ([01;35m[Kans == (int)len[m[K) {
[63.626s]       |             [01;35m[K~~~~^~~~~~~~~~~[m[K
[64.011s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:[m[K In member function â€˜[01m[Kvirtual u_result rp::arch::net::DGramSocketImpl::sendTo(const rp::net::SocketAddress&, const void*, size_t)[m[Kâ€™:
[64.012s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:722:47:[m[K [01;35m[Kwarning: [m[Knonnull argument â€˜[01m[Ktarget[m[Kâ€™ compared to NULL [[01;35m[K-Wnonnull-compare[m[K]
[64.012s]   722 |         const struct sockaddr* addr = &target [01;35m[K?[m[K reinterpret_cast<const struct sockaddr*>(target.getPlatformData()) : NULL;
[64.013s]       |                                               [01;35m[K^[m[K
[65.203s] [ 91%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/arch/linux/net_serial.cpp.o[0m
[67.389s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:[m[K In member function â€˜[01m[Kbool rp::arch::net::raw_serial::open(const char*, uint32_t, uint32_t)[m[Kâ€™:
[67.390s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:97:74:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kflags[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[67.390s]    97 | bool raw_serial::open(const char * portname, uint32_t baudrate, [01;35m[Kuint32_t flags[m[K)
[67.391s]       |                                                                 [01;35m[K~~~~~~~~~^~~~~[m[K
[67.392s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:[m[K In member function â€˜[01m[Kvirtual void rp::arch::net::raw_serial::flush(_u32)[m[Kâ€™:
[67.392s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:281:30:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kflags[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[67.393s]   281 | void raw_serial::flush( [01;35m[K_u32 flags[m[K)
[67.393s]       |                         [01;35m[K~~~~~^~~~~[m[K
[67.394s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:[m[K In member function â€˜[01m[Kvirtual int rp::arch::net::raw_serial::waitforsent(_u32, size_t*)[m[Kâ€™:
[67.394s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:286:34:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[67.395s]   286 | int raw_serial::waitforsent([01;35m[K_u32 timeout[m[K, size_t * returned_size)
[67.395s]       |                             [01;35m[K~~~~~^~~~~~~[m[K
[67.395s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:[m[K In member function â€˜[01m[Kvirtual int rp::arch::net::raw_serial::waitforrecv(_u32, size_t*)[m[Kâ€™:
[67.396s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:292:34:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[67.396s]   292 | int raw_serial::waitforrecv([01;35m[K_u32 timeout[m[K, size_t * returned_size)
[67.397s]       |                             [01;35m[K~~~~~^~~~~~~[m[K
[67.719s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:[m[K In member function â€˜[01m[Kvirtual void rp::arch::net::raw_serial::cancelOperation()[m[Kâ€™:
[67.721s] [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:428:12:[m[K [01;35m[Kwarning: [m[Kignoring return value of â€˜[01m[Kssize_t write(int, const void*, size_t)[m[Kâ€™, declared with attribute warn_unused_result [[01;35m[K-Wunused-result[m[K]
[67.721s]   428 |     [01;35m[K::write(_selfpipe[1], "x", 1)[m[K;
[67.722s]       |     [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
[67.796s] In file included from [01m[K/usr/include/string.h:495[m[K,
[67.797s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/arch/linux/arch_linux.h:40[m[K,
[67.797s]                  from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:35[m[K:
[67.798s] In function â€˜[01m[Kchar* strncpy(char*, const char*, size_t)[m[Kâ€™,
[67.798s]     inlined from â€˜[01m[Kvirtual bool rp::arch::net::raw_serial::bind(const char*, uint32_t, uint32_t)[m[Kâ€™ at [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:91:12[m[K:
[67.799s] [01m[K/usr/include/aarch64-linux-gnu/bits/string_fortified.h:106:34:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kchar* __builtin_strncpy(char*, const char*, long unsigned int)[m[Kâ€™ specified bound 200 equals destination size [[01;35m[K-Wstringop-truncation[m[K]
[67.799s]   106 |   return [01;35m[K__builtin___strncpy_chk (__dest, __src, __len, __bos (__dest))[m[K;
[67.800s]       |          [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[68.260s] [100%] [32m[1mLinking CXX executable rplidar_scan_publisher[0m
[68.886s] [100%] Built target rplidar_scan_publisher
[68.934s] Invoked command in '/home/wheeltec/wheeltec_ros2/build/rplidar_ros2' returned '0': CMAKE_PREFIX_PATH=/opt/ros/galactic /usr/bin/cmake --build /home/wheeltec/wheeltec_ros2/build/rplidar_ros2 -- -j4 -l4
[69.113s] Invoking command in '/home/wheeltec/wheeltec_ros2/build/rplidar_ros2': CMAKE_PREFIX_PATH=/opt/ros/galactic /usr/bin/cmake --install /home/wheeltec/wheeltec_ros2/build/rplidar_ros2
[69.153s] -- Install configuration: "Release"
[69.154s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch
[69.156s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/rplidar_s1_launch.py
[69.161s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/rplidar_s2_launch.py
[69.163s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/rplidar_a3_launch.py
[69.165s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/view_rplidar_s2_launch.py
[69.167s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/view_rplidar_s1_launch.py
[69.169s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/view_rplidar_launch.py
[69.171s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/rplidar_s1_tcp_launch.py
[69.174s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/view_rplidar_s1_tcp_launch.py
[69.176s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/view_rplidar_a3_launch.py
[69.178s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/rplidar_launch.py
[69.180s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/rviz
[69.181s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/rviz/rplidar_ros2.rviz
[69.184s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/lib/rplidar_ros2/rplidar_scan_publisher
[69.188s] -- Set runtime path of "/home/wheeltec/wheeltec_ros2/install/rplidar_ros2/lib/rplidar_ros2/rplidar_scan_publisher" to ""
[69.190s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/ament_index/resource_index/package_run_dependencies/rplidar_ros2
[69.192s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/ament_index/resource_index/parent_prefix_path/rplidar_ros2
[69.194s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/environment/ament_prefix_path.sh
[69.196s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/environment/ament_prefix_path.dsv
[69.198s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/environment/path.sh
[69.199s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/environment/path.dsv
[69.201s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/local_setup.bash
[69.205s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/local_setup.sh
[69.206s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/local_setup.zsh
[69.208s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/local_setup.dsv
[69.210s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/package.dsv
[69.212s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/ament_index/resource_index/packages/rplidar_ros2
[69.213s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/cmake/ament_cmake_export_dependencies-extras.cmake
[69.215s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/cmake/ament_cmake_export_include_directories-extras.cmake
[69.217s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/cmake/rplidar_ros2Config.cmake
[69.219s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/cmake/rplidar_ros2Config-version.cmake
[69.220s] -- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/package.xml
[69.238s] Invoked command in '/home/wheeltec/wheeltec_ros2/build/rplidar_ros2' returned '0': CMAKE_PREFIX_PATH=/opt/ros/galactic /usr/bin/cmake --install /home/wheeltec/wheeltec_ros2/build/rplidar_ros2
