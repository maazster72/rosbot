-- Found ament_cmake: 1.1.6 (/opt/ros/galactic/share/ament_cmake/cmake)
-- Using PYTHON_EXECUTABLE: /usr/bin/python3
-- Found rclcpp: 9.2.2 (/opt/ros/galactic/share/rclcpp/cmake)
-- Using all available rosidl_typesupport_c: rosidl_typesupport_fastrtps_c;rosidl_typesupport_introspection_c
-- Found rosidl_adapter: 2.2.3 (/opt/ros/galactic/share/rosidl_adapter/cmake)
-- Using all available rosidl_typesupport_cpp: rosidl_typesupport_fastrtps_cpp;rosidl_typesupport_introspection_cpp
-- Found rmw_implementation_cmake: 3.3.1 (/opt/ros/galactic/share/rmw_implementation_cmake/cmake)
-- Found rmw_cyclonedds_cpp: 0.22.6 (/opt/ros/galactic/share/rmw_cyclonedds_cpp/cmake)
-- Using RMW implementation 'rmw_cyclonedds_cpp' as default
-- Found sensor_msgs: 2.2.4 (/opt/ros/galactic/share/sensor_msgs/cmake)
-- Found std_srvs: 2.2.4 (/opt/ros/galactic/share/std_srvs/cmake)
-- Configuring done
-- Generating done
-- Build files have been written to: /home/wheeltec/wheeltec_ros2/build/rplidar_ros2
[35m[1mScanning dependencies of target rplidar_scan_publisher[0m
[  8%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/src/rplidar_scan_publisher.cpp.o[0m
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:36[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar.h:36[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:38[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
   58 |     sl_u8 data[[01;35m[K0[m[K];
      |                [01;35m[K^[m[K
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar.h:36[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:38[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
  295 |     sl_u8  payload[[01;35m[K0[m[K];
      |                    [01;35m[K^[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:[m[K In member function â€˜[01m[Kvoid RPLidarScanPublisher::init_param()[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:67:47:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   67 |         this->declare_parameter("channel_type"[01;35m[K)[m[K;
      |                                               [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:68:41:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   68 |         this->declare_parameter("tcp_ip"[01;35m[K)[m[K;
      |                                         [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:69:41:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   69 |         this->declare_parameter("udp_ip"[01;35m[K)[m[K;
      |                                         [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:70:43:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   70 |         this->declare_parameter("tcp_port"[01;35m[K)[m[K;
      |                                           [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:71:43:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   71 |         this->declare_parameter("udp_port"[01;35m[K)[m[K;
      |                                           [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:72:46:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   72 |         this->declare_parameter("serial_port"[01;35m[K)[m[K;
      |                                              [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:73:50:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   73 |         this->declare_parameter("serial_baudrate"[01;35m[K)[m[K;
      |                                                  [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:74:43:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   74 |         this->declare_parameter("frame_id"[01;35m[K)[m[K;
      |                                           [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:75:43:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   75 |         this->declare_parameter("inverted"[01;35m[K)[m[K;
      |                                           [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:76:51:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   76 |         this->declare_parameter("angle_compensate"[01;35m[K)[m[K;
      |                                                   [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:77:44:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   77 |         this->declare_parameter("scan_mode"[01;35m[K)[m[K;
      |                                            [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:78:49:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kconst rclcpp::ParameterValue& rclcpp::Node::declare_parameter(const string&)[m[Kâ€™ is deprecated: declare_parameter() with only a name is deprecated and will be deleted in the future.\nIf you want to declare a parameter that won't change type without a default value use:\n`node->declare_parameter<ParameterT>(name)`, where e.g. ParameterT=int64_t.\n\nIf you want to declare a parameter that can dynamically change type use:\n```\nrcl_interfaces::msg::ParameterDescriptor descriptor;\ndescriptor.dynamic_typing = true;\nnode->declare_parameter(name, rclcpp::ParameterValue{}, descriptor);\n``` [[01;35m[K-Wdeprecated-declarations[m[K]
   78 |         this->declare_parameter("scan_frequency"[01;35m[K)[m[K;
      |                                                 [01;35m[K^[m[K
In file included from [01m[K/opt/ros/galactic/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/executors.hpp:22[m[K,
                 from [01m[K/opt/ros/galactic/include/rclcpp/rclcpp.hpp:156[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:35[m[K:
[01m[K/opt/ros/galactic/include/rclcpp/node.hpp:422:3:[m[K [01;36m[Knote: [m[Kdeclared here
  422 |   [01;36m[Kdeclare_parameter[m[K(const std::string & name);
      |   [01;36m[K^~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:[m[K In member function â€˜[01m[Kbool RPLidarScanPublisher::checkRPLIDARHealth(sl::ILidarDriver*)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/src/rplidar_scan_publisher.cpp:150:5:[m[K [01;35m[Kwarning: [m[Kcontrol reaches end of non-void function [[01;35m[K-Wreturn-type[m[K]
  150 |     [01;35m[K}[m[K
      |     [01;35m[K^[m[K
[ 16%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/arch/linux/timer.cpp.o[0m
[ 25%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/hal/thread.cpp.o[0m
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_protocol.h:36[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:39[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/sdkcommon.h:49[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/hal/thread.cpp:35[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
   58 |     sl_u8 data[[01;35m[K0[m[K];
      |                [01;35m[K^[m[K
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_cmd.h:36[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:40[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/sdkcommon.h:49[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/hal/thread.cpp:35[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
  295 |     sl_u8  payload[[01;35m[K0[m[K];
      |                    [01;35m[K^[m[K
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/hal/thread.cpp:43[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/arch/linux/thread.hpp:[m[K In static member function â€˜[01m[Kstatic rp::hal::Thread rp::hal::Thread::create(thread_proc_t, void*)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/arch/linux/thread.hpp:48:77:[m[K [01;35m[Kwarning: [m[Kcast between incompatible function types from â€˜[01m[Kthread_proc_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int (*)(void*)[m[Kâ€™} to â€˜[01m[Kvoid* (*)(void*)[m[Kâ€™ [[01;35m[K-Wcast-function-type[m[K]
   48 |     pthread_create((pthread_t *)&newborn._handle, NULL, (void * (*)(void *))[01;35m[Kproc[m[K, data);
      |                                                                             [01;35m[K^~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/arch/linux/thread.hpp:[m[K In member function â€˜[01m[Ku_result rp::hal::Thread::join(long unsigned int)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/arch/linux/thread.hpp:129:37:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  129 | u_result Thread::join([01;35m[Kunsigned long timeout[m[K)
      |                       [01;35m[K~~~~~~~~~~~~~~^~~~~~~[m[K
[ 33%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/rplidar_driver.cpp.o[0m
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_protocol.h:36[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:39[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sdkcommon.h:49[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:33[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
   58 |     sl_u8 data[[01;35m[K0[m[K];
      |                [01;35m[K^[m[K
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_cmd.h:36[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:40[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sdkcommon.h:49[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:33[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
  295 |     sl_u8  payload[[01;35m[K0[m[K];
      |                    [01;35m[K^[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:[m[K In member function â€˜[01m[Ku_result rp::standalone::rplidar::RPlidarDriver::connect(const char*, _u32, _u32)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:67:77:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kflag[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
   67 |     u_result RPlidarDriver::connect(const char *path, _u32 portOrBaud, [01;35m[K_u32 flag[m[K)
      |                                                                        [01;35m[K~~~~~^~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:[m[K In member function â€˜[01m[Ku_result rp::standalone::rplidar::RPlidarDriver::reset(_u32)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:101:40:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  101 |     u_result RPlidarDriver::reset([01;35m[K_u32 timeout[m[K)
      |                                   [01;35m[K~~~~~^~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:[m[K In member function â€˜[01m[Ku_result rp::standalone::rplidar::RPlidarDriver::getScanDataWithInterval(rplidar_response_measurement_node_t*, size_t&)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:175:91:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Knodebuffer[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  175 |     u_result RPlidarDriver::getScanDataWithInterval([01;35m[Krplidar_response_measurement_node_t * nodebuffer[m[K, size_t & count)
      |                                                     [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/rplidar_driver.cpp:175:112:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kcount[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  175 |     u_result RPlidarDriver::getScanDataWithInterval(rplidar_response_measurement_node_t * nodebuffer, [01;35m[Ksize_t & count[m[K)
      |                                                                                                       [01;35m[K~~~~~~~~~^~~~~[m[K
[ 41%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/sl_crc.cpp.o[0m
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:36[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_crc.h:36[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_crc.cpp:33[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
   58 |     sl_u8 data[[01;35m[K0[m[K];
      |                [01;35m[K^[m[K
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_crc.h:36[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_crc.cpp:33[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
  295 |     sl_u8  payload[[01;35m[K0[m[K];
      |                    [01;35m[K^[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_crc.cpp:[m[K In function â€˜[01m[Ksl_u32 sl::crc32::cal(sl_u32, void*, sl_u16)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_crc.cpp:77:29:[m[K [01;35m[Kwarning: [m[Ksuggest parentheses around â€˜[01m[K-[m[Kâ€™ in operand of â€˜[01m[K&[m[Kâ€™ [[01;35m[K-Wparentheses[m[K]
   77 |         sl_u8 leftBytes = [01;35m[K4 - len[m[K & 0x3;
      |                           [01;35m[K~~^~~~~[m[K
[ 50%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/sl_lidar_driver.cpp.o[0m
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_protocol.h:36[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:39[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sdkcommon.h:49[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:33[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
   58 |     sl_u8 data[[01;35m[K0[m[K];
      |                [01;35m[K^[m[K
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_cmd.h:36[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:40[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sdkcommon.h:49[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:33[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
  295 |     sl_u8  payload[[01;35m[K0[m[K];
      |                    [01;35m[K^[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::reset(sl_u32)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:273:32:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[KtimeoutInMs[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  273 |         sl_result reset([01;35m[Ksl_u32 timeoutInMs = DEFAULT_TIMEOUT[m[K)
      |                         [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::getAllSupportedScanModes(std::vector<sl::LidarScanMode>&, sl_u32)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:286:89:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[KtimeoutInMs[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  286 |         sl_result getAllSupportedScanModes(std::vector<LidarScanMode>& outModes, [01;35m[Ksl_u32 timeoutInMs = DEFAULT_TIMEOUT[m[K)
      |                                                                                  [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::startScan(bool, bool, sl_u32, sl::LidarScanMode*)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:347:69:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Koptions[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  347 |         sl_result startScan(bool force, bool useTypicalScan, [01;35m[Ksl_u32 options = 0[m[K, LidarScanMode* outUsedScanMode = nullptr)
      |                                                              [01;35m[K~~~~~~~^~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::stop(sl_u32)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:534:31:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  534 |         sl_result stop([01;35m[Ksl_u32 timeout = DEFAULT_TIMEOUT[m[K)
      |                        [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::getDeviceInfo(sl_lidar_response_device_info_t&, sl_u32)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:579:79:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  579 |         sl_result getDeviceInfo(sl_lidar_response_device_info_t& info, [01;35m[Ksl_u32 timeout = DEFAULT_TIMEOUT[m[K)
      |                                                                        [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::checkMotorCtrlSupport(sl::MotorCtrlSupport&, sl_u32)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:592:76:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  592 |         sl_result checkMotorCtrlSupport(MotorCtrlSupport & support, [01;35m[Ksl_u32 timeout = DEFAULT_TIMEOUT[m[K)
      |                                                                     [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::getFrequency(const sl::LidarScanMode&, const sl_lidar_response_measurement_node_hq_t*, size_t, float&)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:627:110:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Knodes[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  627 |         sl_result getFrequency(const LidarScanMode& scanMode, [01;35m[Kconst sl_lidar_response_measurement_node_hq_t* nodes[m[K, size_t count, float& frequency)
      |                                                               [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::getHealth(sl_lidar_response_device_health_t&, sl_u32)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:640:79:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  640 |         sl_result getHealth(sl_lidar_response_device_health_t& health, [01;35m[Ksl_u32 timeout = DEFAULT_TIMEOUT[m[K)
      |                                                                        [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvirtual sl_result sl::SlamtecLidarDriver::getMotorInfo(sl::LidarMotorInfo&, sl_u32)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:730:66:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[KtimeoutInMs[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  730 |         sl_result getMotorInfo(LidarMotorInfo &motorInfo, [01;35m[Ksl_u32 timeoutInMs[m[K)
      |                                                           [01;35m[K~~~~~~~^~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Ksl_result sl::SlamtecLidarDriver::_sendCommand(sl_u16, const void*, size_t)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:1089:35:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kstd::vector<unsigned char>::size_type[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} [[01;35m[K-Wsign-compare[m[K]
 1089 |             for (int pos = 0; [01;35m[Kpos < cmd_packet.size()[m[K; pos++) {
      |                               [01;35m[K~~~~^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:1058:19:[m[K [01;35m[Kwarning: [m[Kunused variable â€˜[01m[Kpkt_header[m[Kâ€™ [[01;35m[K-Wunused-variable[m[K]
 1058 |             sl_u8 [01;35m[Kpkt_header[m[K[10];
      |                   [01;35m[K^~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvoid sl::SlamtecLidarDriver::_ultraCapsuleToNormal(const sl_lidar_response_ultra_capsule_measurement_nodes_t&, sl_lidar_response_measurement_node_hq_t*, size_t&)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:1370:40:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kunsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
 1370 |                     if (([01;35m[Kdist_predict1 == 0xFFFFFE00[m[K) || (dist_predict1 == 0x1FF)) {
      |                          [01;35m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:1379:40:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Kint[m[Kâ€™ and â€˜[01m[Kunsigned int[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
 1379 |                     if (([01;35m[Kdist_predict2 == 0xFFFFFE00[m[K) || (dist_predict2 == 0x1FF)) {
      |                          [01;35m[K~~~~~~~~~~~~~~^~~~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K In member function â€˜[01m[Kvoid sl::SlamtecLidarDriver::_dense_capsuleToNormal(const sl_lidar_response_capsule_measurement_nodes_t&, sl_lidar_response_measurement_node_hq_t*, size_t&)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:1577:116:[m[K [01;35m[Kwarning: [m[Ktype qualifiers ignored on cast result type [[01;35m[K-Wignored-qualifiers[m[K]
 1577 |                     const int dist = static_cast<const int>(_cached_previous_dense_capsuledata.cabins[pos].distance[01;35m[K)[m[K;
      |                                                                                                                    [01;35m[K^[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:[m[K At global scope:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:72:17:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid sl::convert(const sl_lidar_response_measurement_node_hq_t&, sl_lidar_response_measurement_node_t&)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
   72 |     static void [01;35m[Kconvert[m[K(const sl_lidar_response_measurement_node_hq_t& from, sl_lidar_response_measurement_node_t& to)
      |                 [01;35m[K^~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_lidar_driver.cpp:59:17:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kvoid sl::printDeprecationWarn(const char*, const char*)[m[Kâ€™ defined but not used [[01;35m[K-Wunused-function[m[K]
   59 |     static void [01;35m[KprintDeprecationWarn[m[K(const char* fn, const char* replacement)
      |                 [01;35m[K^~~~~~~~~~~~~~~~~~~~[m[K
[ 58%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/sl_serial_channel.cpp.o[0m
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_serial_channel.cpp:33:9:[m[K [01;35m[Kwarning: [m[K#pragma once in main file
   33 | #pragma [01;35m[Konce[m[K
      |         [01;35m[K^~~~[m[K
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:36[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_serial_channel.cpp:34[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
   58 |     sl_u8 data[[01;35m[K0[m[K];
      |                [01;35m[K^[m[K
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_serial_channel.cpp:34[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
  295 |     sl_u8  payload[[01;35m[K0[m[K];
      |                    [01;35m[K^[m[K
[ 66%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/sl_tcp_channel.cpp.o[0m
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_tcp_channel.cpp:33:9:[m[K [01;35m[Kwarning: [m[K#pragma once in main file
   33 | #pragma [01;35m[Konce[m[K
      |         [01;35m[K^~~~[m[K
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:36[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_tcp_channel.cpp:34[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
   58 |     sl_u8 data[[01;35m[K0[m[K];
      |                [01;35m[K^[m[K
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_tcp_channel.cpp:34[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
  295 |     sl_u8  payload[[01;35m[K0[m[K];
      |                    [01;35m[K^[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_tcp_channel.cpp:[m[K In member function â€˜[01m[Kvoid sl::TcpChannel::setStatus(_u32)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_tcp_channel.cpp:95:29:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kflag[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
   95 |         void setStatus([01;35m[K_u32 flag[m[K){}
      |                        [01;35m[K~~~~~^~~~[m[K
[ 75%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/sl_udp_channel.cpp.o[0m
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_udp_channel.cpp:33:9:[m[K [01;35m[Kwarning: [m[K#pragma once in main file
   33 | #pragma [01;35m[Konce[m[K
      |         [01;35m[K^~~~[m[K
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:36[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_udp_channel.cpp:34[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
   58 |     sl_u8 data[[01;35m[K0[m[K];
      |                [01;35m[K^[m[K
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_driver.h:54[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_udp_channel.cpp:34[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
  295 |     sl_u8  payload[[01;35m[K0[m[K];
      |                    [01;35m[K^[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_udp_channel.cpp:[m[K In member function â€˜[01m[Kvoid sl::UdpChannel::setStatus(_u32)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/sl_udp_channel.cpp:103:29:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kflag[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  103 |         void setStatus([01;35m[K_u32 flag[m[K){}
      |                        [01;35m[K~~~~~^~~~[m[K
[ 83%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/arch/linux/net_socket.cpp.o[0m
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_protocol.h:36[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:39[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/sdkcommon.h:49[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:10[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_protocol.h:58:16:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kdata[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
   58 |     sl_u8 data[[01;35m[K0[m[K];
      |                [01;35m[K^[m[K
In file included from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar_cmd.h:36[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/rplidar.h:40[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/sdkcommon.h:49[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:10[m[K:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/include/sl_lidar_cmd.h:295:20:[m[K [01;35m[Kwarning: [m[KISO C++ forbids zero-size array â€˜[01m[Kpayload[m[Kâ€™ [[01;35m[K-Wpedantic[m[K]
  295 |     sl_u8  payload[[01;35m[K0[m[K];
      |                    [01;35m[K^[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:[m[K In member function â€˜[01m[Kvirtual u_result rp::net::SocketAddress::getAddressAsString(char*, size_t) const[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:170:17:[m[K [01;35m[Kwarning: [m[Kordered comparison of pointer with integer zero [[01;35m[K-Wextra[m[K]
  170 |     return ans<=[01;35m[K0[m[K?RESULT_OPERATION_FAIL:RESULT_OK;
      |                 [01;35m[K^[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:[m[K In member function â€˜[01m[Kvirtual u_result rp::arch::net::StreamSocketImpl::send(const void*, size_t)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:438:17:[m[K [01;35m[Kwarning: [m[Kcomparison of integer expressions of different signedness: â€˜[01m[Ksize_t[m[Kâ€™ {aka â€˜[01m[Klong unsigned int[m[Kâ€™} and â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wsign-compare[m[K]
  438 |         if ([01;35m[Kans == (int)len[m[K) {
      |             [01;35m[K~~~~^~~~~~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:[m[K In member function â€˜[01m[Kvirtual u_result rp::arch::net::DGramSocketImpl::sendTo(const rp::net::SocketAddress&, const void*, size_t)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_socket.cpp:722:47:[m[K [01;35m[Kwarning: [m[Knonnull argument â€˜[01m[Ktarget[m[Kâ€™ compared to NULL [[01;35m[K-Wnonnull-compare[m[K]
  722 |         const struct sockaddr* addr = &target [01;35m[K?[m[K reinterpret_cast<const struct sockaddr*>(target.getPlatformData()) : NULL;
      |                                               [01;35m[K^[m[K
[ 91%] [32mBuilding CXX object CMakeFiles/rplidar_scan_publisher.dir/sdk/src/arch/linux/net_serial.cpp.o[0m
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:[m[K In member function â€˜[01m[Kbool rp::arch::net::raw_serial::open(const char*, uint32_t, uint32_t)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:97:74:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kflags[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
   97 | bool raw_serial::open(const char * portname, uint32_t baudrate, [01;35m[Kuint32_t flags[m[K)
      |                                                                 [01;35m[K~~~~~~~~~^~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:[m[K In member function â€˜[01m[Kvirtual void rp::arch::net::raw_serial::flush(_u32)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:281:30:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kflags[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  281 | void raw_serial::flush( [01;35m[K_u32 flags[m[K)
      |                         [01;35m[K~~~~~^~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:[m[K In member function â€˜[01m[Kvirtual int rp::arch::net::raw_serial::waitforsent(_u32, size_t*)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:286:34:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  286 | int raw_serial::waitforsent([01;35m[K_u32 timeout[m[K, size_t * returned_size)
      |                             [01;35m[K~~~~~^~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:[m[K In member function â€˜[01m[Kvirtual int rp::arch::net::raw_serial::waitforrecv(_u32, size_t*)[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:292:34:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Ktimeout[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
  292 | int raw_serial::waitforrecv([01;35m[K_u32 timeout[m[K, size_t * returned_size)
      |                             [01;35m[K~~~~~^~~~~~~[m[K
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:[m[K In member function â€˜[01m[Kvirtual void rp::arch::net::raw_serial::cancelOperation()[m[Kâ€™:
[01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:428:12:[m[K [01;35m[Kwarning: [m[Kignoring return value of â€˜[01m[Kssize_t write(int, const void*, size_t)[m[Kâ€™, declared with attribute warn_unused_result [[01;35m[K-Wunused-result[m[K]
  428 |     [01;35m[K::write(_selfpipe[1], "x", 1)[m[K;
      |     [01;35m[K~~~~~~~^~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/string.h:495[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/./sdk/src/arch/linux/arch_linux.h:40[m[K,
                 from [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:35[m[K:
In function â€˜[01m[Kchar* strncpy(char*, const char*, size_t)[m[Kâ€™,
    inlined from â€˜[01m[Kvirtual bool rp::arch::net::raw_serial::bind(const char*, uint32_t, uint32_t)[m[Kâ€™ at [01m[K/home/wheeltec/wheeltec_ros2/src/wheeltec_lidar_ros2/rplidar_ros-ros2/sdk/src/arch/linux/net_serial.cpp:91:12[m[K:
[01m[K/usr/include/aarch64-linux-gnu/bits/string_fortified.h:106:34:[m[K [01;35m[Kwarning: [m[Kâ€˜[01m[Kchar* __builtin_strncpy(char*, const char*, long unsigned int)[m[Kâ€™ specified bound 200 equals destination size [[01;35m[K-Wstringop-truncation[m[K]
  106 |   return [01;35m[K__builtin___strncpy_chk (__dest, __src, __len, __bos (__dest))[m[K;
      |          [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[100%] [32m[1mLinking CXX executable rplidar_scan_publisher[0m
[100%] Built target rplidar_scan_publisher
-- Install configuration: "Release"
-- Up-to-date: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/view_rplidar_s1_launch.py
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/rplidar_a3_launch.py
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/rplidar_s1_tcp_launch.py
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/rplidar_s1_launch.py
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/view_rplidar_s1_tcp_launch.py
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/view_rplidar_s2_launch.py
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/view_rplidar_a3_launch.py
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/rplidar_s2_launch.py
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/view_rplidar_launch.py
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/launch/rplidar_launch.py
-- Up-to-date: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/rviz
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/rviz/rplidar_ros2.rviz
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/lib/rplidar_ros2/rplidar_scan_publisher
-- Set runtime path of "/home/wheeltec/wheeltec_ros2/install/rplidar_ros2/lib/rplidar_ros2/rplidar_scan_publisher" to ""
-- Up-to-date: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/ament_index/resource_index/package_run_dependencies/rplidar_ros2
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/ament_index/resource_index/parent_prefix_path/rplidar_ros2
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/environment/ament_prefix_path.sh
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/environment/ament_prefix_path.dsv
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/environment/path.sh
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/environment/path.dsv
-- Up-to-date: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/local_setup.bash
-- Up-to-date: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/local_setup.sh
-- Up-to-date: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/local_setup.zsh
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/local_setup.dsv
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/package.dsv
-- Up-to-date: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/ament_index/resource_index/packages/rplidar_ros2
-- Up-to-date: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/cmake/ament_cmake_export_dependencies-extras.cmake
-- Up-to-date: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/cmake/ament_cmake_export_include_directories-extras.cmake
-- Up-to-date: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/cmake/rplidar_ros2Config.cmake
-- Up-to-date: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/cmake/rplidar_ros2Config-version.cmake
-- Installing: /home/wheeltec/wheeltec_ros2/install/rplidar_ros2/share/rplidar_ros2/package.xml
